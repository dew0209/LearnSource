package com.dew.godx.base;

/**
 * cpu核心与线程数的关系：
 *      1:1 （一个核心同时只能运行一个线程）
 *     引入超频技术：
 *      1:2 （一个核心可以同时运行两个线程）
 * cpu时间片轮转（RR调度）：
 *     每个进程会有时间片
 *     该进程在规定时间未完成，直接切换
 *     该进程在规定时间内完成，直接切换
 *     切换：上下文切换，需要时间。
 * 进程和线程：
 *     进程是资源分配的最小单位，进程内部有多个线程，会共享这个进程的资源。进程与进程之间相互独立的。
 *     线程是cpu调度的最小单位，线程需要依附与某个进程。
 * 并行和并发：
 *      并行：同一时刻同时有几个线程运行。
 *      并发：并行 * 时间段 = 并发
 *      例如：食堂打饭，8个窗口。那么并行就是8。如果每次打饭花费30s，一分钟内的并发就是16
 * 并发编程：充分利用cpu资源
 * 并发编程处理重点：
 *      线程之间共享资源。
 *          共享资源存在冲突，
 *          存在死锁
 *          线程太多机器会垮掉
 * @description: 介绍了关于线程基础的知识点
 */
public class BaseMain {
}
