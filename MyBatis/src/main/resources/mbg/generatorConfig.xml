<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "https://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>

    <properties resource="mbg/db.properties"/>

    <classPathEntry location="D:\workspace\mysql-connector-java-5.1.18.jar"/>

    <!--
        context：生成一组对象的环境
            id：必选，上下文id，用于在生产错误时提示
            defaultModelType：指定生成对象的样式
                1.conditional：类似hierarchical
                2.flat：所有内容（主键，blob）等全部生成在一个对象中，推荐使用
                3.hierarchical：主键生成一个XXXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)
            targetRuntime：
                1.MyBatis3：默认值，生成基于MyBatis3.X以上版本的内容，包含XXXBySample
                2.MyBatis3Simple 类似MyBatis3，只是不生成XXXBySample
    -->

    <context id="mysql" targetRuntime="MyBatis3Simple" >
        
        <!-- 生产的java文件编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>

        <commentGenerator>
            <!-- 是否去除自动生成的注释，true是，false否 -->
            <property name="suppressAllComments" value="false"/>

        </commentGenerator>

        <!-- 数据库连接的信息：驱动类，连接地址，用户名，密码 -->
        <jdbcConnection driverClass="${jdbc_driver}" connectionURL="${jdbc_url}" userId="${jdbc_username}" password="${jdbc_password}"/>

        <!--
            模型创建器：
                必须需要的元素。
                targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制
                targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动创建
        -->
        <javaModelGenerator targetPackage="mbg.entity" targetProject="${project_src}">
<!--            <property name="enableSubPackages" value="true"/>-->
            <!--
                生成的key class 和 record class会继承这个类
                如果生成的类和rootClass有相同的属性，MBG就不会重复生成了。
             -->
            <property name="rootClass" value="mbg.entity.BaseEntity"/>

        </javaModelGenerator>

        <!--
            生成SQL mapper的xml文件生成器
                targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制
                targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动创建
        -->
        <sqlMapGenerator targetPackage="mbg.mapper" targetProject="${project_resources}">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!--
            生成mapper接口，没有配置则默认不会生成
                 type：
                    ANNOTATEDMAPPER：会生成使用Mapper接口 + annotation的方式创建（SQL在annotation中），不会生成对应的XML
                    MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加annotation，但是sql会生成在xml中
                    XMLMAPPER：会生成mapper接口，接口完全依赖XML
                 如果是MyBatis3Simple，只支持ANNOTATEDMAPPER和XMLMAPPER
        -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="mbg.mapper" targetProject="${project_src}">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- 数据库表 -->
        <table schema="abtest" tableName="mybatistest" enableCountByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
                enableUpdateByExample="false" selectByExampleQueryId="false">
            <!-- 主键是自增的 -->
            <generatedKey column="id" sqlStatement="MySql"/>
        </table>

    </context>
</generatorConfiguration>